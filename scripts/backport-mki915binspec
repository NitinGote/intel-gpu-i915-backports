#!/bin/sh
#
#	Output a RPM spec file to generate intel-i915 binary package
#

PKG_NAME="intel-i915"
PKG_VER="1.0"
REL_NAME="1"
REL_TYPE=""
DEP_PKG_NAME=""

helpFunction()
{
	echo ""
	echo "Usage: $0 -n packagename -v packageversion -r releaseversion -p prerelease/opensource"
	echo -e "\t-n packagename"
	echo -e "\t-v packageversion"
	echo -e "\t-r releaseversion"
	echo -e "\t-p Release Type : prerelease/opensource"
	exit 1
}

while getopts "n:v:r:p:" opt
do
	case "$opt" in
		n ) PKG_NAME="$OPTARG" ;;
		v ) PKG_VER="$OPTARG" ;;
		r ) REL_NAME="$OPTARG" ;;
		p ) REL_TYPE="$OPTARG" ;;
		? ) helpFunction ;; # Print helpFunction
	esac
done

if [ "$REL_TYPE" = "opensource" ]; then
	DEP_PKG_NAME="intel-dmabuf-symvers"
else
	DEP_PKG_NAME="intel-dmabuf-$REL_TYPE-symvers"
fi

sed -e '/^DEL/d' -e 's/^\t*//' <<EOF
	%define module $PKG_NAME
	%define version $PKG_VER
	%define release $REL_NAME
	%define deppkg $DEP_PKG_NAME-%{_flavor}
	
	%define _flavor %{?FLAVOR}%{?!FLAVOR:default}
	%define _kobj %(realpath %{_usrsrc}/linux-obj/x86_64/%{_flavor}/)
	%define _krel %(make -si -C %{_kobj} %linux_make_arch kernelrelease)

	Summary: I915 Backports Kernel Module Package
	Name: %{module}
	Version: %{version}
	Release: %{release}
	License: GPL
	Group: System Environment/Base
	BuildArch: x86_64
	Vendor: Intel
	Provides: %{module}
	Packager: linux-graphics@intel.com
	Source0: %{module}-%{version}-src.tar.gz
	BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root/
	BuildRequires:  %kernel_module_package_buildreqs %{deppkg} = %{version}

	%kernel_module_package %{_flavor}

	%description
	Out of tree i915 driver modules for SLES15SP3 kernel Version 5.3.18.

	%prep
	%setup -q -c
	cp defconfigs/i915 .config

	%build
	export LEX=flex
	export KBUILD_EXTRA_SYMBOLS="%{_usrsrc}/intel-dmabuf-%{version}/%{_flavor}/Module.symvers"
	make -j KLIB=%{kernel_module_directory}/%{_krel} olddefconfig
	make -j KLIB=%{kernel_module_directory}/%{_krel}

	%install
	if [ "%{buildroot}" != "/" ]; then
		rm -rf %{buildroot}
	fi
	mkdir -p %{buildroot}/lib/modules/%{_krel}/%{kernel_module_package_moddir}/
	find . -name "*.ko" -exec strip -g {} \;
	find . -name "*.ko" -exec xz -z {} \;
	find . -name "*.ko.xz" -exec install -m 0500 {} %{buildroot}/lib/modules/%{_krel}/%{kernel_module_package_moddir}/ \;

	%clean
	if [ "%{buildroot}" != "/" ]; then
		rm -rf %{buildroot}
	fi

	%pre

	%post

	%preun
EOF

